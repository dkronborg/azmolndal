{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploymentname": {
            "type": "string",
            "metadata": {
              "description": "Name of deployment."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
              "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "minLength": 12,
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
              "description": "Name of the virtual machine."
            }
        },
        "storageName": {
            "type": "string",
            "metadata": {
              "description": "Name of the storage account."
            }
        },
        "environment": {
            "type": "string",
            "metadata": {
              "description": "Type of environment"
            },
            "allowedValues": [
                "development",
                "staging",
                "production"
            ]
        }
    },
    "functions": [],
    "variables": {
        "vnetName": "[concat(variables('environmentSettings')[parameters('environment')].shortname, '-', parameters('vmName'), '-vnet-', parameters('deploymentname'))]",
        "subnetName": "[concat(variables('vnetName'), '-subnet')]",
        "nsgName": "[concat(variables('environmentSettings')[parameters('environment')].shortname, '-nsg-', parameters('deploymentname'))]",
        "storageName": "[concat(parameters('storageName'), variables('environmentSettings')[parameters('environment')].shortname)]",
        "pipName": "[concat(variables('environmentSettings')[parameters('environment')].shortname, '-pip-', parameters('deploymentname'))]",
        "networkInterfaceName": "[concat(variables('environmentSettings')[parameters('environment')].shortname, '-', parameters('vmName'), '-NetworkInterface-', parameters('deploymentname'))]",
        "vmName": "[concat(variables('environmentSettings')[parameters('environment')].shortname, '-', parameters('vmName'), '-', parameters('deploymentname'))]",
        "environmentSettings": {
            "development":{
                "shortname": "dev"
            },
            "staging":{
                "shortname": "stg"
            },
            "production":{
                "shortname": "prd"
            }
        }
    },
    "resources": [{
        "name": "[variables('storageName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "location": "[resourceGroup().location]",
        "tags": {
            "displayName": "paramaterVMname Storage Account"
        },
        "sku": {
            "name": "Standard_LRS"
        },
        "kind": "Storage"
    },
    {
        "name": "[variables('pipName')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "tags": {
            "displayName": "PublicIPAddress"
        },
        "properties": {
            "publicIPAllocationMethod": "Dynamic"
        }
    },
    {
        "name": "[variables('nsgName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2018-08-01",
        "location": "[resourceGroup().location]",
        "properties": {
            "securityRules": [
                {
                    "name": "allowSSH",
                    "properties": {
                        "description": "description",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "22",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 100,
                        "direction": "Inbound"
                    }
                }
            ]
        }
    },
    {
        "name": "[variables('vnetName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        ],
        "tags": {
            "displayName": "[variables('vnetName')]"
        },
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "10.0.0.0/16"
                ]
            },
            "subnets": [
                {
                    "name": "[variables('subnetName')]",
                    "properties": {
                        "addressPrefix": "10.0.0.0/24",
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                        }
                    }
                }
            ]
        }
    },
    {
        "name": "[variables('networkInterfaceName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        ],
        "tags": {
            "displayName": "[variables('networkInterfaceName')]"
        },
        "properties": {
            "ipConfigurations": [
                {
                    "name": "ipConfig1",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses',  variables('pipName'))]"
                        },
                        "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
                        }
                    }
                }
            ]
        }
    },
    {
        "name": "[variables('vmName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2019-07-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
        ],
        "tags": {
            "displayName": "[variables('vmName')]"
        },
        "properties": {
            "hardwareProfile": {
                "vmSize": "Standard_A2_v2"
            },
            "osProfile": {
                "computerName": "[variables('vmName')]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "16.04-LTS",
                    "version": "latest"
                },
                "osDisk": {
                    "name": "[concat(variables('environmentSettings')[parameters('environment')].shortname, '-', parameters('vmName'), '-OSDisk-', parameters('deploymentname'))]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                }
            },
            "networkProfile": {
                "networkInterfaces": [
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                    }
                ]
            },
            "diagnosticsProfile": {
                "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageName'))).primaryEndpoints.blob]"
                }
            }
        }
    }],
    "outputs": {}
}